sensor:   
  - platform: vl53l0x
    name: curtain_${index}_${motor}_sensor
    id: curtain_${index}_${motor}_sensor
    address: 0x3${motor}
    update_interval: 1s
    long_range: false
    enable_pin:
      pcf8574: pcf8574_hub_${index}
      number: ${sensorpin}
      mode:
        output: true
    i2c_id: i2c_channel
    internal: false
  - platform: template
    name: curtain_${index}_${motor}_percent
    id: curtain_${index}_${motor}_percent
    filters:
      - clamp:
          min_value: 0
          max_value: 100
    lambda: |-
      return (id(curtain_${index}_${motor}_sensor).state - id(curtain_${index}_${motor}_min).state) / (id(curtain_${index}_${motor}_max).state - id(curtain_${index}_${motor}_min).state);

binary_sensor:
  - platform: template
    name: curtain_${index}_${motor}_closed
    id: curtain_${index}_${motor}_closed
    lambda: |-
      if (id(curtain_${index}_${motor}_percent).state > 0.98) {
        return true;
      } else {
        return false;
      }
  - platform: template
    name: curtain_${index}_${motor}_open
    id: curtain_${index}_${motor}_open
    lambda: |-
      if (id(curtain_${index}_${motor}_percent).state < 0.02) {
        return true;
      } else {
        return false;
      }


number:
  - platform: template
    name: curtain_${index}_${motor}_max
    id: curtain_${index}_${motor}_max
    min_value: 0
    max_value: 5
    step: 0.001
    optimistic: true
    restore_value: true
  - platform: template
    name: curtain_${index}_${motor}_min
    id: curtain_${index}_${motor}_min
    min_value: 0
    max_value: 5
    step: 0.001
    optimistic: true
    restore_value: true


cover:
  - platform: template 
    name: curtain_${index}_${motor}
    lambda: |-
      return id(curtain_${index}_${motor}_percent).state;
    has_position: true
    device_class: curtain
    

    open_action:
      - switch.turn_off: mot${motor}back${index}
      - delay: 0.5s
      - switch.turn_on: mot${motor}go${index}
      - wait_until:
          binary_sensor.is_on: curtain_${index}_${motor}_closed
      - switch.turn_off: mot${motor}go${index}
      - switch.turn_off: mot${motor}back${index}

    close_action:
      - switch.turn_off: mot${motor}go${index}
      - delay: 0.5s
      - switch.turn_on: mot${motor}back${index}
      - wait_until:
          binary_sensor.is_on: curtain_${index}_${motor}_open
      - switch.turn_off: mot${motor}go${index}
      - switch.turn_off: mot${motor}back${index}

      
    stop_action:
      - switch.turn_off: mot${motor}back${index}
      - switch.turn_off: mot${motor}go${index}
