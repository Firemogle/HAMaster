#external_components:
#  - source:
#      type: git
#      url: https://github.com/esphome/home-assistant-voice-pe
#      ref: dev
#    components:
#      - media_player
#      - nabu


voice_assistant:
  microphone: external_mic
  speaker: ${devicename}_speaker
  #media_player: ${devicename}_media
  use_wake_word: false
  noise_suppression_level: 0
  auto_gain: 0 dbfs
  volume_multiplier: 1
  on_client_connected:
    - micro_wake_word.start:
  on_client_disconnected:
    - voice_assistant.stop:
  #on_error:
  # When the voice assistant starts: Play a wake up sound, duck audio.
  on_start:
    - light.turn_on:
        id: ${devicename}_status
        brightness: 75%
        effect: "voice_listen"
    #- script.execute:
    #    id: play_sound
    #    priority: true
    #    sound_file: !lambda return id(timer_finished_sound);

  on_listening:
    - light.turn_on:
        id: ${devicename}_status
        brightness: 75%
        effect: "voice_listen"
  on_stt_vad_start:
    - light.turn_on:
        id: ${devicename}_status
        brightness: 75%
        effect: "voice_thinking"
  #on_stt_vad_end:
  on_tts_start:
    - light.turn_on:
        id: ${devicename}_status
        brightness: 75%
        effect: "voice_thinking"
  # When the voice assistant ends ...
  on_end:
    - wait_until:
        not:
          voice_assistant.is_running:
    # Stop ducking audio.
    - micro_wake_word.start:
    - light.turn_off:
        id: ${devicename}_status
    # Stop the script that would potentially enable the stop word if the response is longer than a second
    #- script.stop: activate_stop_word_if_tts_step_is_long
    # Disable the stop word (If the tiemr is not ringing)
  #on_timer_finished:
  #  - switch.turn_on: timer_ringing
  #on_timer_started:
  #  - script.execute: control_leds
  #on_timer_cancelled:
  #  - script.execute: control_leds
  #on_timer_updated:
  #  - script.execute: control_leds
  #on_timer_tick:
  #  - script.execute: control_leds

micro_wake_word:
  microphone: external_mic
  models:
    - okay_nabu
  on_wake_word_detected: 
    - voice_assistant.start:
    - light.turn_on:
        id: ${devicename}_status
        brightness: 50%
        transition_length: 0s

#media_player:
#  - platform: nabu
#    name: ${devicename}_media
#    id: ${devicename}_media
#    speaker:
#    volume_increment: 0.05
#    volume_min: 0.4
#    volume_max: 0.85
#    files:
#      - id: timer_finished_sound
#        file: https://github.com/esphome/home-assistant-voice-pe/raw/dev/sounds/timer_finished.flac
#      - id: wake_word_triggered_sound
#        file: https://github.com/esphome/home-assistant-voice-pe/raw/dev/sounds/wake_word_triggered.flac
#      - id: easter_egg_tick_sound
#        file: https://github.com/esphome/home-assistant-voice-pe/raw/dev/sounds/easter_egg_tick.mp3
#      - id: easter_egg_tada_sound
#        file: https://github.com/esphome/home-assistant-voice-pe/raw/dev/sounds/easter_egg_tada.mp3

#script:
#  # Script executed when we want to play sounds on the device.
#  - id: play_sound
#    parameters:
#      priority: bool
#      sound_file: "media_player::MediaFile*"
#    then:
#      - lambda: |-
#          if (priority) {
#            id(${devicename}_media)
#              ->make_call()
#              .set_command(media_player::MediaPlayerCommand::MEDIA_PLAYER_COMMAND_STOP)
#              .set_announcement(true)
#              .perform();
#          }
#          if ( (id(${devicename}_media).state != media_player::MediaPlayerState::MEDIA_PLAYER_STATE_ANNOUNCING ) || priority) {
#            id(${devicename}_media)
#              ->make_call()
#              .set_announcement(true)
#              .set_local_media_file(sound_file)
#              .perform();
#          }

