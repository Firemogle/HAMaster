homeassistant:
  customize:
    switch.main_bath_fan:
      friendly_name: Main Bathroom Vent
      icon: mdi:fan
    light.main_bath_vanity:
      friendly_name: Main Bathroom Vanity
    light.main_bath_vent_light:
      friendly_name: Main Bathroom Vent Light
    binary_sensor.main_bath_vent_needed:
      device_class: occupancy
    binary_sensor.main_bath_motion:
      device_class: motion

template:
  - binary_sensor:
      - name: main_bath_vent_needed
        state: >
          {{ is_state('binary_sensor.main_bath_is_humid','on') 
             or is_state('light.main_bath_vent_light', 'on') }}
        delay_off:
          minutes: 5

  - binary_sensor:
      - name: main_bath_is_humid
        state: >
          {{ (states('sensor.bathroom_vent_humidity')|float(default=0) > states('sensor.main_bath_target_humidity')|float(0)) 
             and (is_state('binary_sensor.main_bath_motion','on')
             or is_state('light.main_bath_vent_light', 'on')) }}
        delay_off:
          minutes: 20

  - binary_sensor:
      - name: main_bath_vent_motion
        state: >
          {{ is_state('binary_sensor.main_bath_motion','off') }}
        delay_off:
          minutes: 1

  - sensor:
      - name: main_bath_target_humidity
        state: >
          {% set hvac_hum = states('sensor.hvac_humidity')|float(0) %}
          {% set thresh = states('input_number.main_bath_humidity_thresh')|float(0) %}
          {% set hvac_max = states('input_number.hvac_humidity_max')|float(0) %}
          {% set hvac_target = states('sensor.hvac_target_humidity')|float(0) %}
          {% if is_state('binary_sensor.house_sts_hvac_shut', 'off') or is_state('binary_sensor.house_sts_hvac_cool_req', 'on') %}
            {{ hvac_hum + thresh }}
          {% elif (hvac_hum + thresh) > hvac_max %}
            {{ hvac_max + thresh }}
          {% else %}
            {{ hvac_target + thresh }}
          {% endif %}
        unit_of_measurement: "%"

automation:
  - id: main_bath_vent_control
    alias: main_bath_vent_control
    initial_state: 'off'
    trigger:
      - platform: state
        entity_id: binary_sensor.main_bath_vent_needed
    condition: []
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: binary_sensor.main_bath_vent_needed
                state: 'on'
            sequence:
              - service: switch.turn_on
                target:
                  entity_id: switch.main_bath_fan
        default:
          - service: switch.turn_off
            target:
              entity_id: switch.main_bath_fan
