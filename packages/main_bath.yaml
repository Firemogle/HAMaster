homeassistant:
  customize:
    switch.main_bath_fan:
      friendly_name: Main Bathroom Vent
      icon: mdi:fan
    light.main_bath_vanity:
      friendly_name: Main Bathroom Vanity
    light.main_bath_vent_light:
      friendly_name: Main Bathroom Vent Light
    binary_sensor.main_bath_vent_needed:
      device_class: occupancy
    binary_sensor.main_bath_motion:
      device_class: motion
  
  
template:
  - binary_sensor:
      - name: main_bath_vent_needed
        state: >
          {{ ( is_state('binary_sensor.main_bath_is_humid','on') 
             or is_state('binary_sensor.centralite_3320_l_e278490e_ias_zone','on'))
             or is_state('light.main_bath_vent_light', 'on') }}
        delay_off:
          minutes: 5
          
  - binary_sensor:
      - name: main_bath_is_humid
        state: >
          {{ (states('sensor.bathroom_vent_humidity')|float(default='0') > states('sensor.main_bath_target_humidity')|float(default='0')) 
             and ( is_state('binary_sensor.main_bath_motion','on')
             or is_state('light.main_bath_vent_light', 'on')) }}
        delay_off:
          minutes: 20
          

  - binary_sensor:
      - name: main_bath_vent_motion
        state: >
          {{ is_state('binary_sensor.main_bath_motion','off') }}
        delay_off:
          minutes: 1
          
  - binary_sensor:
      - name: main_bath_target_humidity
        state: >
          {% if is_state('binary_sensor.house_sts_hvac_shut', 'off') or is_state('binary_sensor.house_sts_hvac_cool_req', 'on') %}
            {{ (states('sensor.hvac_humidity')|float(default='0')+states('input_number.main_bath_humidity_thresh')|float(default='0')) }}
          {% elif (states('sensor.hvac_humidity')|float(default='0')+states('input_number.main_bath_humidity_thresh')|float(default='0')) > (states('input_number.hvac_humidity_max'))|float(default='0') %}
            {{ (states('input_number.hvac_humidity_max')|float(default='0')+states('input_number.main_bath_humidity_thresh')|float(default='0')) }}
          {% else %}
            {{ (states('sensor.hvac_target_humidity')|float(default='0')+states('input_number.main_bath_humidity_thresh')|float(default='0')) }}
          {% endif %}
        unit_of_measurement: "%"
    
sensor:
  - platform: mqtt
    name: "Bathroom Vent Temperature"
    state_topic: "/Attic_Sensor/Vent/Temperature"
    unit_of_measurement: "°C"
    device_class: temperature

  - platform: mqtt
    name: "Bathroom Vent Pressure"
    state_topic: "/Attic_Sensor/Vent/Pressure"
    unit_of_measurement: "hPa"
    device_class: temperature

  - platform: mqtt
    name: "Bathroom Vent Humidity"
    state_topic: "/Attic_Sensor/Vent/Humidity"
    unit_of_measurement: "%"
    device_class: pressure

  - platform: mqtt
    name: "Bathroom Vent VOC"
    state_topic: "/Attic_Sensor/Vent/Gas"
    unit_of_measurement: "Ω"


        

automation:
  - id: main_bath_vent_control
    alias: main_bath_vent_control
    initial_state: 'off'
    trigger:
    - entity_id: binary_sensor.main_bath_vent_needed
      platform: state
    condition: []
    action:
    - data:
        entity_id: switch.main_bath_fan
      service_template: >
        {% if is_state('binary_sensor.main_bath_vent_needed','on') %}
          switch.turn_on
        {% else %}
          switch.turn_off
        {% endif %}
