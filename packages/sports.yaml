automation:
  - id: 'kansas_playing'
    alias: kansas_playing
    trigger:
    - entity_id: sensor.kansas_basketball
      platform: state
      from:
        - "PRE"
        - "IN"
      to:
        - "IN"
        - "POST"
    - entity_id: sensor.kansas_football
      platform: state
      from:
        - "PRE"
        - "IN"
      to:
        - "IN"
        - "POST"
    - entity_id: sensor.kansas_volleyball
      platform: state
      from:
        - "PRE"
        - "IN"
      to:
        - "IN"
        - "POST"
    condition: []
    action:
      - if:
          - condition: template
            value_template: "{{ trigger.to_state.state == 'IN' }}"
        then:
          - service: script.save_hall_light_state
          - service: light.turn_on
            data:
              brightness: 255
              entity_id: light.uhall_ban_hall_ban
              color_name: white
              effect: "Jayhawks"
          - service: light.turn_on
            data:
              brightness: 255
              entity_id: light.cabinet_top
              color_name: white
              effect: "Jayhawks"
          - service: light.turn_on
            data:
              entity_id: light.jayhawk_candle
          - data_template:
              message: "Jayhawks be playing."
            service: notify.group_notify
        else:
          - service: script.restore_hall_light_state
          - service: light.turn_off
            data:
              entity_id: light.jayhawk_candle
    mode: queued
  - id: 'chiefs_playing'
    alias: chiefs_playing
    trigger:
    - entity_id: sensor.kansas_city_chiefs
      platform: state
      from:
        - "PRE"
        - "IN"
      to:
        - "IN"
        - "POST"
    condition: []
    action:
      - if:
          - condition: template
            value_template: "{{ trigger.to_state.state == 'IN' }}"
        then:
          - service: script.save_hall_light_state
          - service: light.turn_on
            data:
              brightness: 255
              entity_id: light.uhall_ban_hall_ban
              color_name: white
              effect: "Chiefs"
          - service: light.turn_on
            data:
              brightness: 255
              entity_id: light.cabinet_top
              color_name: white
              effect: "Chiefs"
          - data_template:
              message: "Chiefs be playing."
            service: notify.group_notify
        else:
          - service: script.restore_hall_light_state
    mode: queued


input_number:
  saved_light_brightness:
    name: Saved Light Brightness
    min: 0
    max: 255
    step: 1

input_text:
  saved_light_effect:
    name: Saved Light Effect

  saved_light_color:
    name: Saved Light Color

script:
  save_hall_light_state:
    alias: Save Hall Light State
    mode: single
    sequence:
      - variables:
          brightness: "{{ state_attr('light.uhall_ban_hall_ban', 'brightness') | int(0) }}"
          effect: "{{ state_attr('light.uhall_ban_hall_ban', 'effect') | default('') }}"
          rgb_color: >
            {% if state_attr('light.uhall_ban_hall_ban', 'rgb_color') is defined %}
              {{ state_attr('light.uhall_ban_hall_ban', 'rgb_color') }}
            {% else %}
              none
            {% endif %}
      - service: input_number.set_value
        target:
          entity_id: input_number.saved_light_brightness
        data:
          value: "{{ brightness }}"
      - service: input_text.set_value
        target:
          entity_id: input_text.saved_light_effect
        data:
          value: "{{ effect }}"
      - service: input_text.set_value
        target:
          entity_id: input_text.saved_light_color
        data:
          value: "{{ rgb_color }}"
            
  restore_hall_light_state:
    alias: Restore Hall Light State
    mode: single
    sequence:
      - variables:
          brightness: "{{ states('input_number.saved_light_brightness') | int(0) }}"
          effect: "{{ states('input_text.saved_light_effect') }}"
          rgb_color: "{{ states('input_text.saved_light_color') }}"
          parsed_color: >
            {% if rgb_color not in ['none', '', 'unknown'] %}
              {% set color = rgb_color | replace('[','') | replace(']','') | split(',') %}
              [{{ color[0] | float }}, {{ color[1] | float }}, {{ color[2] | float }}]
            {% else %}
              none
            {% endif %}
      - service: light.turn_on
        target:
          entity_id:
            - light.uhall_ban_hall_ban
            - light.cabinet_top
        data:
          brightness: "{{ brightness }}"
          effect: >
            {% if effect != '' %}
              {{ effect }}
            {% else %}
              none
            {% endif %}
          rgb_color: >
            {% if parsed_color != 'none' %}
              {{ parsed_color }}
            {% endif %}

