homeassistant:
  customize:
    binary_sensor.house_sts_hvac_cool_req:
      device_class: cold
    binary_sensor.house_sts_hvac_heat_req:
      device_class: heat
    binary_sensor.house_sts_hvac_run:
      device_class: power
    binary_sensor.house_sts_hvac_shut:
      device_class: door

template:
  - trigger:
      - platform: time_pattern
        hours: /1
    action:
      - service: weather.get_forecasts
        data:
          type: twice_daily
        target:
          entity_id: weather.karb_daynight
        response_variable: high
    sensor:
      - name: daily_high
        unique_id: daily_high
        state: >
          {%set highlist = high['weather.karb_daynight']['forecast'][0]['temperature'],high['weather.karb_daynight']['forecast'][1]['temperature'],high['weather.karb_daynight']['forecast'][2]['temperature']%} {{ highlist|max |float }}

  - binary_sensor:
      - name: house_sts_hvac_shut
        state: >
          {{ is_state('binary_sensor.hall_window_opened', 'off')
             and is_state('binary_sensor.sliding_glass_door_opened', 'off')
             and is_state('binary_sensor.livingroom_door_opened', 'off') 
             and is_state('binary_sensor.living_room_window', 'off') }}
        delay_off:
          minutes: 5

  - binary_sensor:
      - name: house_sts_hvac_cool_req
        state: >
          {{ state_attr('weather.karb_daynight', 'temperature')|float(default=0) > states('input_number.hvac_ac_enable_temp')|float(default=0)
             or states(sensor.daily_high)|float(default=0) > states('input_number.hvac_ac_enable_temp')|float(default=0)}}
        delay_off:
          minutes: 30
        delay_on:
          minutes: 5

  - binary_sensor:
      - name: house_sts_hvac_heat_req
        state: >
          {{ state_attr('weather.karb_daynight', 'temperature')|float(default=0) < states('input_number.hvac_heat_enable_temp')|float
             and (state_attr('weather.karb_daynight', 'forecast')[0]['temperature']|float(default=0) < 50 or state_attr('weather.karb_daynight', 'forecast')[1]['temperature']|float(default=0) < 50)}}
        delay_off:
          minutes: 30
        delay_on:
          minutes: 5

  - binary_sensor:
      - name: house_sts_hvac_req
        state: >
          {{ is_state('binary_sensor.house_sts_hvac_cool_req', 'on')
             or is_state('binary_sensor.house_sts_hvac_heat_req', 'on') }}

  - binary_sensor:
      - name: house_sts_hvac_run
        state: >
          {{ is_state('binary_sensor.house_sts_hvac_req', 'on')
             and is_state('binary_sensor.house_sts_hvac_shut', 'on') }}

  - binary_sensor:
      - name: house_sts_hum_passive_req
        state: >
          {{ is_state('binary_sensor.house_sts_hvac_heat_req', 'on')
             and states('sensor.hvac_current_humidity')|float(default=0) < states('sensor.hvac_target_humidity')|float(default=0) }}

  - binary_sensor:
      - name: house_sts_hum_active_req
        state: >
          {{ is_state('binary_sensor.house_sts_hvac_heat_req', 'on')
             and states('sensor.hvac_current_humidity')|float(default=0) < states('sensor.hvac_target_humidity')|float-5 }}

  - binary_sensor:
      - name: house_sts_hum_passive_run
        state: >
          {{ is_state('binary_sensor.house_sts_hum_passive_req', 'on')
             and is_state('sensor.hvac_fan_state', 'on') }}
             
  - sensor:
      - name: hvac_target_humidity
        unit_of_measurement: "%"
        state: >
          {% if ((0.0049*state_attr('weather.karb_daynight', 'temperature')|float(default=0)+0.2668)*100) > states('input_number.hvac_humidity_max')|float(default=0) %}
            {{ states('input_number.hvac_humidity_max')| float(default='0') }}
          {% else %} 
            {{ (0.0049*state_attr('weather.karb_daynight', 'temperature')|float(default=0)+0.2668)*100 }}
          {% endif %}

automation:
  - id: 'house_hvac_ena'
    alias: house_hvac_ena
    initial_state: 'off'
    trigger:
    - entity_id: binary_sensor.house_sts_hvac_run
      platform: state
    condition: []
    action:
    - data:
        entity_id: script.hvac_run_stop
      service: script.turn_on

  - id: 'house_hvac_set'
    alias: house_hvac_set
    initial_state: 'off'
    trigger:
    - entity_id: binary_sensor.house_sts_dte_cheap
      platform: state
    - entity_id: binary_sensor.house_sts_guest
      platform: state
    - entity_id: binary_sensor.house_sts_vacation
      platform: state
    - entity_id: binary_sensor.house_sts_incoming
      platform: state
    condition: []
    action:
    - data:
        entity_id: script.hvac_run_setpoint
      service: script.turn_on

  - id: 'house_humid'
    alias: house_humid
    initial_state: 'off'
    trigger:
    - entity_id: sensor.hvac_target_humidity
      platform: state
    condition: []
    action:
    - service: humidifier.set_humidity
      target:
        entity_id: humidifier.house
      data:
        humidity: >
          {{ states('sensor.hvac_target_humidity')|int(default=20) }}



