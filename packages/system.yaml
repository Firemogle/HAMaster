homeassistant:
  customize:
    alarm_control_panel.abode_alarm_system:
      hidden: true
    sensor.home_eta:
      hidden: true
    sensor.home_security_state:
      hidden: true
    zone.brett_work:
      radius: 100
    device_tracker.google_maps_108379141181739394475:
      friendly_name: Liz
    device_tracker.google_maps_116842525089175776476:
      friendly_name: Brett
    binary_sensor.house_sts_occupants:
      device_class: occupancy
      
input_boolean:
  house_sts_guest:
    initial: false
  house_sts_dte_cheap:
    initial: false
  house_sts_vacation:
    initial: false
  jayhawk_lamp_req:
    initial: false

template:
  - binary_sensor:
      - name: house_sts_occupants
        state: "{{ is_state('group.occupants', 'home') }}"
      - name: house_sts_guest
        state: "{{ is_state('input_boolean.house_sts_guest', 'on') }}"
      - name: house_sts_vacation
        state: "{{ is_state('input_boolean.house_sts_vacation', 'on') }}"
      - name: house_sts_away_vacation
        state: >
          {{ states('proximity.brett_home') | float(0) > 120 and
             states('proximity.liz_home') | float(0) > 120 and
             is_state('binary_sensor.house_sts_vacation', 'on') }}
      - name: house_sts_incoming
        state: >
          {{ is_state('device_tracker.google_maps_116842525089175776476', 'homecoming')
             or is_state('device_tracker.google_maps_108379141181739394475', 'homecoming') }}
      - name: house_sts_dte_cheap
        state: "{{ is_state('input_boolean.house_sts_dte_cheap', 'on') }}"
      - name: house_sts_jayhawks
        state: "{{ is_state('input_boolean.jayhawk_lamp_req', 'on') }}"
      - name: house_boot_complete
        state: "{{ states('sensor.uptime') | float(0) > 5 }}"
      - name: ingress_alarm
        state: >
          {{ states('alarm_control_panel.alarm_panel') in ['armed_away', 'armed_home']
             and is_state('group.security', 'on') }}
      - name: house_armed
        state: "{{ is_state('alarm_control_panel.alarm_panel', 'disarmed') }}"

  - sensor:
      - name: timeday
        state: >
          {% if is_state('binary_sensor.house_wake_for_work', 'on') or
                is_state('binary_sensor.house_weekend_wakeup', 'on') or
                is_state('binary_sensor.morning', 'on') %}
            morning
          {% elif is_state('binary_sensor.afternoon', 'on') %}
            afternoon
          {% elif is_state('binary_sensor.evening', 'on') %}
            evening
          {% else %}
            night
          {% endif %}


alert:
  ingress_alarm:
    name: ingress_alarm
    done_message: "House is now secure"
    message: "House is open bro"
    entity_id: binary_sensor.ingress_alarm
    state: 'on'
    repeat: 5
    can_acknowledge: true
    skip_first: true
    notifiers:
      - group_notify

input_number:
  hvac_home_ac_temp:
    mode: slider
    min: 60
    max: 85
    step: 1
    unit_of_measurement: "F"

  hvac_home_heat_temp:
    mode: slider
    min: 60
    max: 85
    step: 1
    unit_of_measurement: "F"

  hvac_away_ac_temp:
    mode: slider
    min: 60
    max: 85
    step: 1
    unit_of_measurement: "F"

  hvac_away_heat_temp:
    mode: slider
    min: 60
    max: 85
    step: 1
    unit_of_measurement: "F"

  hvac_overnight_ac_temp:
    mode: slider
    min: 60
    max: 85
    step: 1
    unit_of_measurement: "F"

  hvac_overnight_heat_temp:
    mode: slider
    min: 60
    max: 85
    step: 1
    unit_of_measurement: "F"

  hvac_vacation_ac_temp:
    mode: slider
    min: 60
    max: 85
    step: 1
    unit_of_measurement: "F"

  hvac_vacation_heat_temp:
    mode: slider
    min: 60
    max: 85
    step: 1
    unit_of_measurement: "F"

  hvac_ac_enable_temp:
    mode: slider
    min: 60
    max: 85
    step: 1
    unit_of_measurement: "F"

  hvac_heat_enable_temp:
    mode: slider
    min: 60
    max: 85
    step: 1
    unit_of_measurement: "F"

  hvac_humidity_max:
    mode: slider
    min: 30
    max: 55
    step: 1
    unit_of_measurement: "%"

  main_bath_humidity_thresh:
    mode: slider
    min: 0
    max: 15
    step: 1
    unit_of_measurement: "%"

  office_heater_thresh:
    mode: slider
    min: 55
    max: 70
    step: 1
    unit_of_measurement: "F"

automation:
  - alias: ha_start
    id: ha_start
    trigger:
      - platform: homeassistant
        event: start
    action:
      - service: script.turn_on
        target:
          entity_id: script.initialization
      - service: notify.group_notify
        data:
          message: "Rejoice! For now is the blessed time for home assistant has once again booted."
          data:
            timeout: 300
            tag: "system"
            color: "red"

  - alias: ha_down
    id: ha_down
    trigger:
      - platform: homeassistant
        event: shutdown
    action:
      - service: notify.group_notify
        data:
          message: "Home Assistant is now shutting down"
          data:
            timeout: 300
            tag: "system"
            color: "red"

  - alias: house_sts_occupants
    id: house_sts_occupants
    trigger:
      - platform: state
        entity_id: binary_sensor.house_sts_occupants
    action:
      - service: script.turn_on
        target:
          entity_id: script.hvac_run_stop_uni
      - choose:
          - conditions: >
              {{ is_state('binary_sensor.house_sts_occupants', 'off') and is_state('binary_sensor.house_sts_guest', 'off') }}
            sequence:
              - service: alarm_control_panel.alarm_arm_away
                data:
                  entity_id: alarm_control_panel.alarm_panel
                  code: !secret alarmcode
              - service: script.turn_on
                target:
                  entity_id: script.house_away
          - conditions: >
              {{ is_state('binary_sensor.house_sts_occupants', 'off') and is_state('binary_sensor.house_sts_vacation', 'on') }}
            sequence:
              - service: alarm_control_panel.alarm_arm_away
                data:
                  entity_id: alarm_control_panel.alarm_panel
                  code: !secret alarmcode
              - service: scene.turn_on
                target:
                  entity_id: scene.house_away
        default:
          - service: alarm_control_panel.alarm_disarm
            data:
              entity_id: alarm_control_panel.alarm_panel
              code: !secret alarmcode
          - service: script.turn_on
            target:
              entity_id: script.house_home
      - service: notify.group_notify
        data:
          message: "Occupancy mode changed to {{ states('binary_sensor.house_sts_occupants') }}"
          data:
            timeout: 1200
            channel: "Occupancy"

  - alias: DTE_cheap_switch
    id: DTE_cheap_switch
    mode: queued
    trigger:
      - platform: calendar
        event: start
        entity_id: calendar.teamcarriger_gmail_com
      - platform: calendar
        event: end
        entity_id: calendar.teamcarriger_gmail_com
    condition:
      - condition: template
        value_template: "{{ 'DTE Cheap' in trigger.calendar_event.summary }}"
    action:
      - choose:
          - conditions: "{{ trigger.event == 'start' }}"
            sequence:
              - service: input_boolean.turn_on
                target:
                  entity_id: input_boolean.house_sts_dte_cheap
        default:
          - service: input_boolean.turn_off
            target:
              entity_id: input_boolean.house_sts_dte_cheap

  - alias: house_guest_switch
    id: house_guest_switch
    mode: queued
    trigger:
      - platform: calendar
        event: start
        entity_id: calendar.teamcarriger_gmail_com
      - platform: calendar
        event: end
        entity_id: calendar.teamcarriger_gmail_com
    condition:
      - condition: or
        conditions:
          - condition: template
            value_template: "{{ 'in town' in trigger.calendar_event.summary }}"
          - condition: template
            value_template: "{{ 'Date Night' in trigger.calendar_event.summary }}"
          - condition: template
            value_template: "{{ 'Cleaners' in trigger.calendar_event.summary }}"
    action:
      - choose:
          - conditions: "{{ trigger.event == 'start' }}"
            sequence:
              - service: input_boolean.turn_on
                target:
                  entity_id: input_boolean.house_sts_guest
        default:
          - service: input_boolean.turn_off
            target:
              entity_id: input_boolean.house_sts_guest

  - alias: house_vacation_switch
    id: house_vacation_switch
    mode: queued
    trigger:
      - platform: calendar
        event: start
        entity_id: calendar.teamcarriger_gmail_com
      - platform: calendar
        event: end
        entity_id: calendar.teamcarriger_gmail_com
    condition:
      - condition: template
        value_template: "{{ 'vacation' in trigger.calendar_event.summary }}"
    action:
      - choose:
          - conditions: "{{ trigger.event == 'start' }}"
            sequence:
              - service: input_boolean.turn_on
                target:
                  entity_id: input_boolean.house_sts_vacation
        default:
          - service: input_boolean.turn_off
            target:
              entity_id: input_boolean.house_sts_vacation

  - id: update_abode_disarmed
    alias: update_abode_disarmed
    initial_state: 'off'
    trigger:
      platform: state
      entity_id: alarm_control_panel.abode_alarm
      to: 'disarmed'
    action:
      service: alarm_control_panel.alarm_disarm
      entity_id: alarm_control_panel.alarm_panel
      data:
        code: !secret alarmcode
      
  - id: update_from_abode_disarmed
    alias: update_from_abode_disarmed
    initial_state: 'off'
    trigger:
      platform: state
      entity_id: alarm_control_panel.alarm_panel
      to: 'disarmed'
    action:
      service: alarm_control_panel.alarm_disarm
      entity_id: alarm_control_panel.abode_alarm
      
  - id: update_abode_armed_away
    alias: update_abode_armed_away
    initial_state: 'off'
    trigger:
      platform: state
      entity_id: alarm_control_panel.abode_alarm
      to: 'armed_away'
    action:
      service: alarm_control_panel.alarm_arm_away
      entity_id: alarm_control_panel.alarm_panel
      data:
        code: !secret alarmcode
      
  - id: update_from_abode_armed_away
    alias: update_from_abode_armed_away
    initial_state: 'off'
    trigger:
      platform: state
      entity_id: alarm_control_panel.alarm_panel
      to: 'armed_away'
    action:
      service: alarm_control_panel.alarm_arm_away
      entity_id: alarm_control_panel.abode_alarm
      
  - id: update_abode_armed_home
    alias: update_abode_armed_home
    initial_state: 'off'
    trigger:
      platform: state
      entity_id: alarm_control_panel.abode_alarm
      to: 'armed_home'
    action:
      service: alarm_control_panel.alarm_arm_home
      entity_id: alarm_control_panel.alarm_panel
      data:
        code: !secret alarmcode
      
  - id: update_from_abode_armed_home
    alias: update_from_abode_armed_home
    initial_state: 'off'
    trigger:
      platform: state
      entity_id: alarm_control_panel.alarm_panel
      to: 'armed_home'
    action:
      service: alarm_control_panel.alarm_arm_home
      entity_id: alarm_control_panel.abode_alarm

script:
  update_all_esphome_devices:
    alias: "Update All ESPHome Devices"
    sequence:
      - alias: "Install updates on all ESPHome devices with updates available"
        service: update.install
        target:
          entity_id: >
            {% set ids = integration_entities('esphome') %}
            {% set update_entities = expand(ids) | selectattr('state','eq','on') | map(attribute='entity_id') | list %}
            {{ update_entities }}
    mode: single

                      
