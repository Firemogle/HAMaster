homeassistant:
  customize:
    alarm_control_panel.abode_alarm_system:
      hidden: true
    sensor.home_eta:
      hidden: true
    sensor.home_security_state:
      hidden: true
    zone.brett_work:
      radius: 5000
    device_tracker.google_maps_108379141181739394475:
      friendly_name: Liz
    device_tracker.google_maps_116842525089175776476:
      friendly_name: Brett
    binary_sensor.house_sts_occupants:
      device_class: occupancy
      
      
input_boolean:
  house_sts_guest:
    name: house_sts_guest
  house_sts_dte_cheap:
    name: house_sts_dte_cheap
  house_sts_vacation:
    name: house_sts_vacation

template:
  - binary_sensor:
      - name: house_sts_occupants
        state: >
          {{ is_state('group.occupants', 'home') }}
  - binary_sensor:
      - name: house_sts_guest
        state: >
          {{ is_state('input_boolean.house_sts_guest', 'on') }}
  - binary_sensor:
      - name: house_sts_vacation
        state: >
          {{ is_state('input_boolean.house_sts_vacation', 'on') }}

  - binary_sensor:
      - name: house_sts_away_vacation
        state: >
          {{ ((states.proximity.brett_home.state)|float(default=0) > 120 and 
             (states.proximity.liz_home.state)|float(default=0)) > 120 and 
              is_state('binary_sensor.house_sts_vacation', 'on') }}
              
  - binary_sensor:
      - name: house_sts_incoming
        state: >
          {{ is_state('device_tracker.google_maps_116842525089175776476', 'homecoming')
             or is_state('device_tracker.google_maps_108379141181739394475', 'homecoming') }}

  - binary_sensor:
      - name: house_sts_dte_cheap
        state: >
          {{ is_state('input_boolean.house_sts_dte_cheap', 'on') }}

  - binary_sensor:
      - name: house_sts_jayhawks
        state: >
          {{ states.calendar.football_kuathleticscom.state == 'on'
             or states.calendar.mens_basketball_kuathleticscom.state == 'on'
             or states.calendar.volleyball_kuathleticscom.state == 'on' }}
             
  - binary_sensor:
      - name: house_boot_complete
        state: >
          {{ states('sensor.uptime')|float(default=0) > 5 }}
          
  - binary_sensor:
      - name: ingress_alarm
        state: >
          {{ (states('alarm_control_panel.alarm_panel') == 'armed_away'
             or states('alarm_control_panel.alarm_panel') == 'armed_home')
             and states('group.security') == 'on' }}
             
  - binary_sensor:
      - name: house_armed
        state: >
          {{ is_state('alarm_control_panel.alarm_panel','disarmed') }}
          
  - sensor:
      - name: timeday
        state: >
          {% if is_state('binary_sensor.house_wake_for_work', 'on') or is_state('binary_sensor.house_weekend_wakeup', 'on') or is_state('binary_sensor.morning', 'on')%}
            {{ "morning" }}
          {% elif is_state('binary_sensor.afternoon', 'on') %} 
            {{ "afternoon" }}
          {% elif is_state('binary_sensor.evening', 'on') %}
            {{ "evening" }}
          {% else %}
            {{ "night" }}
          {% endif %}
          
          
alert:
  ingress_alarm:
    name: ingress_alarm
    done_message: "House is now secure"
    message: "House is open bro"
    entity_id: binary_sensor.ingress_alarm
    state: 'on'
    repeat: 5
    can_acknowledge: true
    skip_first: true
    notifiers:
      - group_notify
      
input_number:
  hvac_home_ac_temp:
    mode: slider
    min: 60
    max: 85
    step: 1
    unit_of_measurement: "F"
  
  hvac_home_heat_temp:
    mode: slider
    min: 60
    max: 85
    step: 1
    unit_of_measurement: "F"
  
  hvac_away_ac_temp:
    mode: slider
    min: 60
    max: 85
    step: 1
    unit_of_measurement: "F"
  
  hvac_away_heat_temp:
    mode: slider
    min: 60
    max: 85
    step: 1
    unit_of_measurement: "F"
  
  hvac_overnight_ac_temp:
    mode: slider
    min: 60
    max: 85
    step: 1
    unit_of_measurement: "F"
  
  hvac_overnight_heat_temp:
    mode: slider
    min: 60
    max: 85
    step: 1
    unit_of_measurement: "F"
  
  hvac_vacation_ac_temp:
    mode: slider
    min: 60
    max: 85
    step: 1
    unit_of_measurement: "F"
  
  hvac_vacation_heat_temp:
    mode: slider
    min: 60
    max: 85
    step: 1
    unit_of_measurement: "F"
    
  hvac_ac_enable_temp:
    mode: slider
    min: 60
    max: 85
    step: 1
    unit_of_measurement: "F"
  
  hvac_heat_enable_temp:
    mode: slider
    min: 60
    max: 85
    step: 1
    unit_of_measurement: "F"
  
  hvac_humidity_max:
    mode: slider
    min: 30
    max: 55
    step: 1
    unit_of_measurement: "%"
    
  main_bath_humidity_thresh:
    mode: slider
    min: 0
    max: 15
    step: 1
    unit_of_measurement: "%"

  office_heater_thresh:
    mode: slider
    min: 55
    max: 70
    step: 1
    unit_of_measurement: "F"

mqtt:
  sensor:
    name: "DTE Energy Bridge Summary"
    state_topic: "event/metering/summation/minute"
    unit_of_measurement: 'W'
    value_template: "{{ value_json.value | round(0) }}" 

sensor:    
  - platform: integration
    source: sensor.dte_energy_bridge_summary
    name: energy_spent
    unit_prefix: k
    round: 2

automation:
  - id: system_update_available
    alias: system_update_available
    initial_state: 'off'
    trigger:
      platform: state
      entity_id: updater.updater
    action:
      service: notify.brett_notify
      data:
        message: 'Update for Home Assistant is available.'
        
  - id: send_person_detected
    alias: send_person_detected
    initial_state: 'off'
    mode: single
    trigger:
      platform: event
      event_type: folder_watcher
      event_data:
        event_type: modified
    action:
      - delay:
          seconds: 10
      - service: notify.group_notify
        data:
          message: "Homie be up in your yard"
          data:
            image: "https://homeassistant.teamcarriger.club/local/snapshot1.jpg"
      - delay:
          seconds: 30

  - id: 'ha_start'
    alias: ha_start
    trigger:
    - event: start
      platform: homeassistant
    condition: []
    action:
    - data:
        entity_id: script.initialization
      service: script.turn_on
    - data_template:
        message: "Rejoice! For now is the blessed time for home assistant has once again booted."
      service: notify.group_notify
      

  - id: 'ha_down'
    alias: ha_down
    trigger:
    - event: shutdown
      platform: homeassistant
    condition: []
    action:
    - data_template:
        message: "Home Assistant is now shutting down"
      service: notify.group_notify

  - id: 'house_sts_occupants'
    alias: house_sts_occupants
    initial_state: 'off'
    trigger:
    - entity_id: binary_sensor.house_sts_occupants
      platform: state
    condition: []
    action:
    - data:
        entity_id: script.hvac_run_setpoint
      service: script.turn_on
    - data:
        entity_id: alarm_control_panel.alarm_panel
        code: !secret alarmcode
      service_template: >
        {% if is_state('binary_sensor.house_sts_occupants', 'off') and is_state('binary_sensor.house_sts_guest', 'off') %}
          alarm_control_panel.alarm_arm_away
        {% elif is_state('binary_sensor.house_sts_occupants', 'off') and is_state('house_status', 'vacation') %}
          alarm_control_panel.alarm_arm_away
        {% else %}
          alarm_control_panel.alarm_disarm
        {% endif %}
    - data_template:
        entity_id: >
             {% if is_state('binary_sensor.house_sts_occupants', 'off') and is_state('binary_sensor.house_sts_guest', 'off') %}
               scene.house_away
             {% else %}
               scene.house_home
             {% endif %} 
      service: scene.turn_on
    - data_template:
        message: >
          Occupancy mode changed to {{ states('binary_sensor.house_sts_occupants') }}
      service: notify.group_notify

  - id: 'DTE_cheap_switch'
    alias: DTE_cheap_switch
    trigger:
      - platform: calendar
        event: start
        entity_id: calendar.teamcarriger_gmail_com
      - platform: calendar
        event: end
        entity_id: calendar.teamcarriger_gmail_com
    condition:
      - condition: template
        value_template: "{{ 'DTE Cheap' in trigger.calendar_event.summary }}"
    action:
      - if:
          - "{{ trigger.event == 'start' }}"
        then:
          - service: input_boolean.turn_on
            entity_id: input_boolean.house_sts_dte_cheap
        else:
          - service: input_boolean.turn_off
            entity_id: input_boolean.house_sts_dte_cheap
    mode: queued
      
  - id: 'house_guest_switch'
    alias: house_guest_switch
    trigger:
      - platform: calendar
        event: start
        entity_id: calendar.teamcarriger_gmail_com
        offset: -02:00:00
      - platform: calendar
        event: end
        entity_id: calendar.teamcarriger_gmail_com
    condition:
      condition: or
      conditions:
        - condition: template
          value_template: "{{ 'in town' in trigger.calendar_event.summary }}"
        - condition: template
          value_template: "{{ 'date night' in trigger.calendar_event.summary }}"
    action:
      - if:
          - "{{ trigger.event == 'start' }}"
        then:
          - service: input_boolean.turn_on
            entity_id: input_boolean.house_sts_guest
        else:
          - service: input_boolean.turn_off
            entity_id: input_boolean.house_sts_guest
    mode: queued

  - id: 'house_vacation_switch'
    alias: house_guestacation_switch
    trigger:
      - platform: calendar
        event: start
        entity_id: calendar.teamcarriger_gmail_com
        offset: -02:00:00
      - platform: calendar
        event: end
        entity_id: calendar.teamcarriger_gmail_com
    condition:
      - condition: template
        value_template: "{{ 'vacation' in trigger.calendar_event.summary }}"
    action:
      - if:
          - "{{ trigger.event == 'start' }}"
        then:
          - service: input_boolean.turn_on
            entity_id: input_boolean.house_sts_vacation
        else:
          - service: input_boolean.turn_off
            entity_id: input_boolean.house_sts_vacation
    mode: queued
